#!/bin/bash
set -euo pipefail

# Generated by CSV2PG AI Schema Infer on {{ generation_date }}
# CSV: {{ csv_path }}
# Table: {{ table_name }}

STATE_FILE="{{ state_file }}"
LOG_FILE="{{ log_file }}"
CONFIG_FILE="{{ config_file }}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "================================"
echo "CSV2PG Import Script"
echo "================================"
echo "CSV:    {{ csv_path }}"
echo "Table:  {{ table_name }}"
echo "Config: ${CONFIG_FILE}"
echo "================================"

# Check if pgloader is installed
if ! command -v pgloader &> /dev/null; then
    echo -e "${RED}Error: pgloader is not installed${NC}"
    echo "Please install pgloader: https://pgloader.io/"
    exit 1
fi

# Load state if exists
if [[ -f "$STATE_FILE" ]]; then
    STATUS=$(jq -r '.status' "$STATE_FILE" 2>/dev/null || echo "unknown")
    if [[ "$STATUS" == "completed" ]]; then
        echo -e "${YELLOW}Import already completed.${NC}"
        echo "Use --force to reimport."
        exit 0
    elif [[ "$STATUS" == "in_progress" ]]; then
        echo -e "${YELLOW}Previous import was in progress. Retrying...${NC}"
    fi
fi

# Update state: starting
echo -e "${GREEN}Starting import...${NC}"
jq -n \
    --arg status "in_progress" \
    --arg phase "importing" \
    --arg start "$(date -Iseconds)" \
    '{status: $status, phase: $phase, timestamps: {import_started: $start}}' \
    > "$STATE_FILE"

# Run pgloader
echo -e "${GREEN}Running pgloader...${NC}"
if pgloader "$CONFIG_FILE" >> "$LOG_FILE" 2>&1; then
    # Success
    jq -n \
        --arg status "completed" \
        --arg phase "completed" \
        --arg end "$(date -Iseconds)" \
        '{status: $status, phase: $phase, timestamps: {completed: $end}}' \
        > "$STATE_FILE"

    echo -e "${GREEN}================================${NC}"
    echo -e "${GREEN}Import completed successfully!${NC}"
    echo -e "${GREEN}================================${NC}"
    echo "Log: $LOG_FILE"
    exit 0
else
    # Failure
    EXIT_CODE=$?
    jq -n \
        --arg status "failed" \
        --arg phase "failed" \
        --arg end "$(date -Iseconds)" \
        --arg error "pgloader exited with code $EXIT_CODE" \
        '{status: $status, phase: $phase, timestamps: {failed: $end}, error: $error}' \
        > "$STATE_FILE"

    echo -e "${RED}================================${NC}"
    echo -e "${RED}Import failed!${NC}"
    echo -e "${RED}================================${NC}"
    echo "Check log file for details: $LOG_FILE"
    echo ""
    echo "Last 20 lines of log:"
    tail -n 20 "$LOG_FILE"
    exit $EXIT_CODE
fi