# CSV2PG Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# REQUIRED: Google Gemini API Configuration
# =============================================================================
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# Optional: Gemini model to use (default: gemini-1.5-pro)
# Available models: gemini-1.5-pro, gemini-1.5-flash, gemini-1.0-pro
GEMINI_MODEL=gemini-1.5-pro

# =============================================================================
# DATABASE CONNECTION (Optional - can be provided via CLI)
# =============================================================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
# Example: postgresql://postgres:password@localhost:5432/mydb
DATABASE_URL=postgresql://postgres:password@localhost:5432/mydb

# Alternative: Individual database components
DB_HOST=localhost
DB_PORT=5432
DB_NAME=mydb
DB_USER=postgres
DB_PASSWORD=password

# =============================================================================
# CSV PROCESSING CONFIGURATION
# =============================================================================
# Number of rows to sample for type inference (default: 100)
CSV2PG_SAMPLE_ROWS=100

# Number of columns per chunk for LLM processing (default: 20)
CSV2PG_CHUNK_SIZE=20

# CSV encoding to use (default: auto-detect)
# Common values: utf-8, latin-1, windows-1252
CSV2PG_ENCODING=auto

# CSV delimiter to use (default: auto-detect)
# Common values: , (comma), ; (semicolon), | (pipe), \t (tab)
CSV2PG_DELIMITER=auto

# =============================================================================
# LLM API CONFIGURATION
# =============================================================================
# API request timeout in seconds (default: 30)
GEMINI_TIMEOUT=30

# Number of retry attempts for failed API calls (default: 3)
GEMINI_RETRY_ATTEMPTS=3

# Delay between retries in seconds (default: 5)
GEMINI_RETRY_DELAY=5

# Enable parallel API requests for column chunks (default: true)
CSV2PG_PARALLEL_REQUESTS=true

# =============================================================================
# OUTPUT CONFIGURATION
# =============================================================================
# Output directory for generated files (default: ./output)
CSV2PG_OUTPUT_DIR=./output

# Enable dry-run mode (generate configs without importing) (default: false)
CSV2PG_DRY_RUN=false

# Force overwrite existing files (default: false)
CSV2PG_FORCE=false

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level (default: INFO)
# Available levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path (default: stdout)
# Set to a file path to log to file instead of console
LOG_FILE=

# Enable structured logging (JSON format) (default: false)
LOG_STRUCTURED=false

# =============================================================================
# DEVELOPMENT/TESTING CONFIGURATION
# =============================================================================
# Test database URL for integration tests
TEST_DATABASE_URL=postgresql://test:test@localhost:5432/csv2pg_test

# Test Gemini API key (for CI/CD, use a separate test key)
GEMINI_API_KEY_TEST=your_test_gemini_api_key_here

# Enable debug mode (default: false)
DEBUG=false

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================
# Maximum memory usage in MB (default: 512)
CSV2PG_MAX_MEMORY=512

# Enable caching of type inference results (default: true)
CSV2PG_ENABLE_CACHE=true

# Cache directory (default: ~/.cache/csv2pg)
CSV2PG_CACHE_DIR=~/.cache/csv2pg

# Custom template directory (optional)
# CSV2PG_TEMPLATE_DIR=./custom_templates

# =============================================================================
# EXAMPLES FOR COMMON SCENARIOS
# =============================================================================

# Example 1: Supabase/PostgreSQL Cloud
# DATABASE_URL=postgresql://postgres.abcdefghijklmnop:[YOUR-PASSWORD]@aws-0-us-west-1.pooler.supabase.com:6543/postgres

# Example 2: Local PostgreSQL with custom settings
# DATABASE_URL=postgresql://postgres:password@localhost:5432/mydb
# CSV2PG_SAMPLE_ROWS=200
# CSV2PG_CHUNK_SIZE=15

# Example 3: Large CSV processing
# CSV2PG_SAMPLE_ROWS=500
# CSV2PG_CHUNK_SIZE=10
# CSV2PG_MAX_MEMORY=1024
# GEMINI_TIMEOUT=60

# Example 4: Development with verbose logging
# LOG_LEVEL=DEBUG
# DEBUG=true
# CSV2PG_DRY_RUN=true

# =============================================================================
# NOTES
# =============================================================================
# 1. Never commit your actual .env file to version control
# 2. The .env file is automatically loaded by the application
# 3. Environment variables take precedence over config file values
# 4. CLI flags take precedence over environment variables
# 5. Use quotes around values that contain special characters
# 6. Boolean values can be: true, false, 1, 0, yes, no, on, off
